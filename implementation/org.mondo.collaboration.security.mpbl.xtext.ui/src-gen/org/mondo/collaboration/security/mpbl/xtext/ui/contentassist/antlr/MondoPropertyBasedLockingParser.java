/*
 * generated by Xtext
 */
package org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.mondo.collaboration.security.mpbl.xtext.services.MondoPropertyBasedLockingGrammarAccess;

public class MondoPropertyBasedLockingParser extends AbstractContentAssistParser {
	
	@Inject
	private MondoPropertyBasedLockingGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr.internal.InternalMondoPropertyBasedLockingParser createParser() {
		org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr.internal.InternalMondoPropertyBasedLockingParser result = new org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr.internal.InternalMondoPropertyBasedLockingParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRoleAccess().getAlternatives(), "rule__Role__Alternatives");
					put(grammarAccess.getBindAccess().getAlternatives(), "rule__Bind__Alternatives");
					put(grammarAccess.getPropertyBasedLockingModelAccess().getGroup(), "rule__PropertyBasedLockingModel__Group__0");
					put(grammarAccess.getUserAccess().getGroup(), "rule__User__Group__0");
					put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
					put(grammarAccess.getGroupAccess().getGroup_4(), "rule__Group__Group_4__0");
					put(grammarAccess.getLockAccess().getGroup(), "rule__Lock__Group__0");
					put(grammarAccess.getBindingAccess().getGroup(), "rule__Binding__Group__0");
					put(grammarAccess.getRoleBindAccess().getGroup(), "rule__RoleBind__Group__0");
					put(grammarAccess.getValueBindAccess().getGroup(), "rule__ValueBind__Group__0");
					put(grammarAccess.getObjectBindAccess().getGroup(), "rule__ObjectBind__Group__0");
					put(grammarAccess.getPropertyBasedLockingModelAccess().getRolesAssignment_1(), "rule__PropertyBasedLockingModel__RolesAssignment_1");
					put(grammarAccess.getPropertyBasedLockingModelAccess().getLocksAssignment_4(), "rule__PropertyBasedLockingModel__LocksAssignment_4");
					put(grammarAccess.getUserAccess().getNameAssignment_1(), "rule__User__NameAssignment_1");
					put(grammarAccess.getGroupAccess().getNameAssignment_1(), "rule__Group__NameAssignment_1");
					put(grammarAccess.getGroupAccess().getUsersAssignment_3(), "rule__Group__UsersAssignment_3");
					put(grammarAccess.getGroupAccess().getUsersAssignment_4_1(), "rule__Group__UsersAssignment_4_1");
					put(grammarAccess.getLockAccess().getOwnerAssignment_0(), "rule__Lock__OwnerAssignment_0");
					put(grammarAccess.getLockAccess().getPatternAssignment_4(), "rule__Lock__PatternAssignment_4");
					put(grammarAccess.getLockAccess().getBindingsAssignment_5(), "rule__Lock__BindingsAssignment_5");
					put(grammarAccess.getBindingAccess().getParamAssignment_1(), "rule__Binding__ParamAssignment_1");
					put(grammarAccess.getBindingAccess().getValueAssignment_2(), "rule__Binding__ValueAssignment_2");
					put(grammarAccess.getRoleBindAccess().getRoleAssignment_1(), "rule__RoleBind__RoleAssignment_1");
					put(grammarAccess.getValueBindAccess().getValueAssignment_1(), "rule__ValueBind__ValueAssignment_1");
					put(grammarAccess.getObjectBindAccess().getObjectAssignment_1(), "rule__ObjectBind__ObjectAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr.internal.InternalMondoPropertyBasedLockingParser typedParser = (org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr.internal.InternalMondoPropertyBasedLockingParser) parser;
			typedParser.entryRulePropertyBasedLockingModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MondoPropertyBasedLockingGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MondoPropertyBasedLockingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
