/*
 * generated by Xtext
 */
grammar InternalMondoPropertyBasedLocking;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.mondo.collaboration.security.mpbl.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.mondo.collaboration.security.mpbl.xtext.services.MondoPropertyBasedLockingGrammarAccess;

}

@parser::members {
 
 	private MondoPropertyBasedLockingGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MondoPropertyBasedLockingGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePropertyBasedLockingModel
entryRulePropertyBasedLockingModel 
:
{ before(grammarAccess.getPropertyBasedLockingModelRule()); }
	 rulePropertyBasedLockingModel
{ after(grammarAccess.getPropertyBasedLockingModelRule()); } 
	 EOF 
;

// Rule PropertyBasedLockingModel
rulePropertyBasedLockingModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getGroup()); }
(rule__PropertyBasedLockingModel__Group__0)
{ after(grammarAccess.getPropertyBasedLockingModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole 
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleAccess().getAlternatives()); }
(rule__Role__Alternatives)
{ after(grammarAccess.getRoleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUser
entryRuleUser 
:
{ before(grammarAccess.getUserRule()); }
	 ruleUser
{ after(grammarAccess.getUserRule()); } 
	 EOF 
;

// Rule User
ruleUser
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserAccess().getGroup()); }
(rule__User__Group__0)
{ after(grammarAccess.getUserAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroup
entryRuleGroup 
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupAccess().getGroup()); }
(rule__Group__Group__0)
{ after(grammarAccess.getGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLock
entryRuleLock 
:
{ before(grammarAccess.getLockRule()); }
	 ruleLock
{ after(grammarAccess.getLockRule()); } 
	 EOF 
;

// Rule Lock
ruleLock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLockAccess().getGroup()); }
(rule__Lock__Group__0)
{ after(grammarAccess.getLockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinding
entryRuleBinding 
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingAccess().getGroup()); }
(rule__Binding__Group__0)
{ after(grammarAccess.getBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBind
entryRuleBind 
:
{ before(grammarAccess.getBindRule()); }
	 ruleBind
{ after(grammarAccess.getBindRule()); } 
	 EOF 
;

// Rule Bind
ruleBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindAccess().getAlternatives()); }
(rule__Bind__Alternatives)
{ after(grammarAccess.getBindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRoleBind
entryRuleRoleBind 
:
{ before(grammarAccess.getRoleBindRule()); }
	 ruleRoleBind
{ after(grammarAccess.getRoleBindRule()); } 
	 EOF 
;

// Rule RoleBind
ruleRoleBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleBindAccess().getGroup()); }
(rule__RoleBind__Group__0)
{ after(grammarAccess.getRoleBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueBind
entryRuleValueBind 
:
{ before(grammarAccess.getValueBindRule()); }
	 ruleValueBind
{ after(grammarAccess.getValueBindRule()); } 
	 EOF 
;

// Rule ValueBind
ruleValueBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueBindAccess().getGroup()); }
(rule__ValueBind__Group__0)
{ after(grammarAccess.getValueBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectBind
entryRuleObjectBind 
:
{ before(grammarAccess.getObjectBindRule()); }
	 ruleObjectBind
{ after(grammarAccess.getObjectBindRule()); } 
	 EOF 
;

// Rule ObjectBind
ruleObjectBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectBindAccess().getGroup()); }
(rule__ObjectBind__Group__0)
{ after(grammarAccess.getObjectBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Role__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getUserParserRuleCall_0()); }
	ruleUser
{ after(grammarAccess.getRoleAccess().getUserParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRoleAccess().getGroupParserRuleCall_1()); }
	ruleGroup
{ after(grammarAccess.getRoleAccess().getGroupParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindAccess().getObjectBindParserRuleCall_0()); }
	ruleObjectBind
{ after(grammarAccess.getBindAccess().getObjectBindParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBindAccess().getValueBindParserRuleCall_1()); }
	ruleValueBind
{ after(grammarAccess.getBindAccess().getValueBindParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBindAccess().getRoleBindParserRuleCall_2()); }
	ruleRoleBind
{ after(grammarAccess.getBindAccess().getRoleBindParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PropertyBasedLockingModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyBasedLockingModel__Group__0__Impl
	rule__PropertyBasedLockingModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyBasedLockingModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getPropertyBasedLockingModelAction_0()); }
(

)
{ after(grammarAccess.getPropertyBasedLockingModelAccess().getPropertyBasedLockingModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyBasedLockingModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyBasedLockingModel__Group__1__Impl
	rule__PropertyBasedLockingModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyBasedLockingModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getRolesAssignment_1()); }
(rule__PropertyBasedLockingModel__RolesAssignment_1)*
{ after(grammarAccess.getPropertyBasedLockingModelAccess().getRolesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyBasedLockingModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyBasedLockingModel__Group__2__Impl
	rule__PropertyBasedLockingModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyBasedLockingModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getLocksKeyword_2()); }

	'locks' 

{ after(grammarAccess.getPropertyBasedLockingModelAccess().getLocksKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyBasedLockingModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyBasedLockingModel__Group__3__Impl
	rule__PropertyBasedLockingModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyBasedLockingModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPropertyBasedLockingModelAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyBasedLockingModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyBasedLockingModel__Group__4__Impl
	rule__PropertyBasedLockingModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyBasedLockingModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getLocksAssignment_4()); }
(rule__PropertyBasedLockingModel__LocksAssignment_4)*
{ after(grammarAccess.getPropertyBasedLockingModelAccess().getLocksAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyBasedLockingModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyBasedLockingModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyBasedLockingModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPropertyBasedLockingModelAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__User__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__0__Impl
	rule__User__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getUserKeyword_0()); }

	'user' 

{ after(grammarAccess.getUserAccess().getUserKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getNameAssignment_1()); }
(rule__User__NameAssignment_1)
{ after(grammarAccess.getUserAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupKeyword_0()); }

	'group' 

{ after(grammarAccess.getGroupAccess().getGroupKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameAssignment_1()); }
(rule__Group__NameAssignment_1)
{ after(grammarAccess.getGroupAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getUsersAssignment_3()); }
(rule__Group__UsersAssignment_3)
{ after(grammarAccess.getGroupAccess().getUsersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__4__Impl
	rule__Group__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroup_4()); }
(rule__Group__Group_4__0)*
{ after(grammarAccess.getGroupAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Group__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group_4__0__Impl
	rule__Group__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getGroupAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getUsersAssignment_4_1()); }
(rule__Group__UsersAssignment_4_1)
{ after(grammarAccess.getGroupAccess().getUsersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Lock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lock__Group__0__Impl
	rule__Lock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getOwnerAssignment_0()); }
(rule__Lock__OwnerAssignment_0)
{ after(grammarAccess.getLockAccess().getOwnerAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lock__Group__1__Impl
	rule__Lock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getLockKeyword_1()); }

	'lock' 

{ after(grammarAccess.getLockAccess().getLockKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lock__Group__2__Impl
	rule__Lock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getLockAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lock__Group__3__Impl
	rule__Lock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getQueryKeyword_3()); }

	'query' 

{ after(grammarAccess.getLockAccess().getQueryKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lock__Group__4__Impl
	rule__Lock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getPatternAssignment_4()); }
(rule__Lock__PatternAssignment_4)
{ after(grammarAccess.getLockAccess().getPatternAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lock__Group__5__Impl
	rule__Lock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getBindingsAssignment_5()); }
(rule__Lock__BindingsAssignment_5)*
{ after(grammarAccess.getLockAccess().getBindingsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lock__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lock__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getLockAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Binding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getBindKeyword_0()); }

	'bind' 

{ after(grammarAccess.getBindingAccess().getBindKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getParamAssignment_1()); }
(rule__Binding__ParamAssignment_1)
{ after(grammarAccess.getBindingAccess().getParamAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getValueAssignment_2()); }
(rule__Binding__ValueAssignment_2)
{ after(grammarAccess.getBindingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RoleBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoleBind__Group__0__Impl
	rule__RoleBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleBindAccess().getRoleKeyword_0()); }

	'role' 

{ after(grammarAccess.getRoleBindAccess().getRoleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoleBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoleBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleBindAccess().getRoleAssignment_1()); }
(rule__RoleBind__RoleAssignment_1)
{ after(grammarAccess.getRoleBindAccess().getRoleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueBind__Group__0__Impl
	rule__ValueBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueBindAccess().getValueKeyword_0()); }

	'value' 

{ after(grammarAccess.getValueBindAccess().getValueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueBindAccess().getValueAssignment_1()); }
(rule__ValueBind__ValueAssignment_1)
{ after(grammarAccess.getValueBindAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectBind__Group__0__Impl
	rule__ObjectBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectBindAccess().getObjectKeyword_0()); }

	'object' 

{ after(grammarAccess.getObjectBindAccess().getObjectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectBindAccess().getObjectAssignment_1()); }
(rule__ObjectBind__ObjectAssignment_1)
{ after(grammarAccess.getObjectBindAccess().getObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__PropertyBasedLockingModel__RolesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getRolesRoleParserRuleCall_1_0()); }
	ruleRole{ after(grammarAccess.getPropertyBasedLockingModelAccess().getRolesRoleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyBasedLockingModel__LocksAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyBasedLockingModelAccess().getLocksLockParserRuleCall_4_0()); }
	ruleLock{ after(grammarAccess.getPropertyBasedLockingModelAccess().getLocksLockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__User__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__UsersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getUsersUserCrossReference_3_0()); }
(
{ before(grammarAccess.getGroupAccess().getUsersUserIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getGroupAccess().getUsersUserIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getGroupAccess().getUsersUserCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__UsersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getUsersUserCrossReference_4_1_0()); }
(
{ before(grammarAccess.getGroupAccess().getUsersUserIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGroupAccess().getUsersUserIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getGroupAccess().getUsersUserCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__OwnerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getOwnerRoleCrossReference_0_0()); }
(
{ before(grammarAccess.getLockAccess().getOwnerRoleIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getLockAccess().getOwnerRoleIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getLockAccess().getOwnerRoleCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__PatternAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getPatternPatternCrossReference_4_0()); }
(
{ before(grammarAccess.getLockAccess().getPatternPatternSTRINGTerminalRuleCall_4_0_1()); }
	RULE_STRING{ after(grammarAccess.getLockAccess().getPatternPatternSTRINGTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getLockAccess().getPatternPatternCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lock__BindingsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLockAccess().getBindingsBindingParserRuleCall_5_0()); }
	ruleBinding{ after(grammarAccess.getLockAccess().getBindingsBindingParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ParamAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getParamVariableCrossReference_1_0()); }
(
{ before(grammarAccess.getBindingAccess().getParamVariableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getParamVariableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getParamVariableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getValueBindParserRuleCall_2_0()); }
	ruleBind{ after(grammarAccess.getBindingAccess().getValueBindParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBind__RoleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleBindAccess().getRoleRoleCrossReference_1_0()); }
(
{ before(grammarAccess.getRoleBindAccess().getRoleRoleIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRoleBindAccess().getRoleRoleIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRoleBindAccess().getRoleRoleCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBind__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueBindAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getValueBindAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectBind__ObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectBindAccess().getObjectEObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getObjectBindAccess().getObjectEObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectBindAccess().getObjectEObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getObjectBindAccess().getObjectEObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


